openapi: 3.0.0
info:
  title: Student Portal
  description: ''
  version: 1.0.0
servers:
  - url: 'http://localhost:8081'
tags: 
- name: "Student Portal API's"
paths:
  /getAll:
    get:
      tags: 
      - name: "Get All Students"
      operationId: GetStudents
      description: "Get A list of All The Students"
      responses:
        '200':
          description: A JSON Array of Students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
                  
  /getStud/{name}:
    get:
      tags: 
      - name: "Get Student By Name"
      operationId: GetByName
      description: Get Student Details by name
      summary: "Get Student By Name"
      parameters: 
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Details Fetched Status Ok"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: "No Entry Found By that Name"
          content:
            {}
  /stud:
    post:
      tags: 
      - name: "Add A Student to Catalog"
      operationId: PostStudents
      summary: "Add a Student to Catalog"
      description: "Add a Student"
      requestBody:
        description: "Student Object That Needs to be added"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: The student has been added Successfully
          content: {}
          
          
  /upStud/{name}:
    put:
      tags: 
      - name: "Update a Student In Catalog"
      operationId: UpdateStud
      description: "Update Student Details"
      summary: "Update Student Details in the Catalog"
      parameters: 
      - in: path
        name: name
        description: "Student Name to Update Details"
        required: true
        schema:
          type: string
      requestBody:
        description: Updated Student Details 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          
      responses:
        200:
          description: "Student Updated Successfully"
          content:
            {}
        400:
          description: "Invalid Student Name Specified"
          content:
            {}
        404:
          description: "Student Not Found"
          
  /remStud/{name}:
    delete:
      tags: 
      - name: "Remove a Student from the Catalog"
      operationId: DeleteStud
      summary: "Delete a Student from Catalog"
      description: "Delete a Students Info"
      parameters:
      - name: name
        in: path
        description: "Name of the Student to be Deleted"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Removed Successfully"
          content:
            {}
        400:
          description: "invalid username supplied"
          content:
            {}
        404:
          description: "Student not Found"
          content:
            {}
components:
  schemas:
    Student:
      type: object
      properties:
        studentName:
          type: string
        studentAge:
          type: string
        studentMarks:
          type: string
